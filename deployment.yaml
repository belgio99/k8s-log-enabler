apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx-2
  template:
    metadata:
      labels:
        app: nginx-2
    spec:
      containers:
        - name: nginx
          image: nginxdemos/hello:latest
          ports:
            - containerPort: 8080
        - name: envoy-proxy
          image: envoyproxy/envoy:v1.26-latest
          args:
            - "--config-path"
            - "/etc/envoy/envoy.yaml"
          volumeMounts:
            - name: envoy-config
              mountPath: /etc/envoy/envoy.yaml
              subPath: envoy.yaml
      volumes:
        - name: envoy-config
          configMap:
            name: envoy-configmap

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: envoy-configmap
data:
  envoy.yaml: |
    admin:
      address:
        socket_address:
          protocol: TCP
          address: 0.0.0.0
          port_value: 9901
    static_resources:
      listeners:
      - name: listener_0
        address:
          socket_address:
            address: 0.0.0.0
            port_value: '8001'
        filter_chains:
        - filters:
          - name: envoy.http_connection_manager
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
              stat_prefix: my_http_connection_manager
              access_log:
              - name: envoy.access_loggers.file
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
                  path: "/dev/stdout"
                  json_format:
                    start_time: "%START_TIME%"
                    method: "%REQ(:METHOD)%"
                    path: "%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%"
                    protocol: "%PROTOCOL%"
                    response_code: "%RESPONSE_CODE%"
                    response_flags: "%RESPONSE_FLAGS%"
                    bytes_received: "%BYTES_RECEIVED%"
                    bytes_sent: "%BYTES_SENT%"
                    duration: "%DURATION%"
                    upstream_service_time: "%RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)%"
                    x_forwarded_for: "%REQ(X-FORWARDED-FOR)%"
                    user_agent: "%REQ(USER-AGENT)%"
                    request_id: "%REQ(X-REQUEST-ID)%"
                    requested_server_name: "%REQ(:AUTHORITY)%"
                    upstream_host: "%UPSTREAM_HOST%"
                    upstream_cluster: "%UPSTREAM_CLUSTER%"
              route_config:
                name: local_route
                virtual_hosts:
                - name: backend
                  domains:
                  - "*"
                  routes:
                  - match:
                      prefix: "/"
                    route:
                      cluster: my-app-service
              http_filters:
              - name: envoy.router
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
      clusters:
      - name: my-app-service
        connect_timeout: 0.25s
        type: static
        lb_policy: round_robin
        load_assignment:
          cluster_name: my-app-service
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: 127.0.0.1
                    port_value: 80

---
apiVersion: v1
kind: Service
metadata:
  name: nginx
spec:
  selector:
    app: nginx-2
  type: LoadBalancer
  ports:
    - protocol: TCP
      port: 9901 #containerPort
      targetPort: 8001 #hostport