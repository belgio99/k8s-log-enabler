---
apiVersion: v1
kind: Namespace
metadata:
  name: log-elk
  labels:
    istio-injection: disabled
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: filebeat
  namespace: log-elk

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: filebeat
rules:
- apiGroups: [""] 
  resources:
  - namespaces
  - pods
  - nodes
  verbs:
  - get
  - watch
  - list

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: filebeat
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: filebeat
subjects:
- kind: ServiceAccount
  name: filebeat
  namespace: log-elk

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: elasticsearch
  namespace: log-elk
spec:
  serviceName: elasticsearch
  replicas: 1
  selector:
    matchLabels:
      app: elasticsearch
  template:
    metadata:
      labels:
        app: elasticsearch
    spec:
      containers:
      - name: elasticsearch
        image: docker.elastic.co/elasticsearch/elasticsearch:7.15.0
        resources:
          limits:
            memory: 2Gi
        volumeMounts:
        - name: data
          mountPath: /usr/share/elasticsearch/data
        env:
          - name: discovery.type
            value: single-node
          - name: xpack.security.enabled
            value: "false"
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      volumes:
      - name: data
        emptyDir: {}
  volumeClaimTemplates:
  - metadata:
      name: elasticsearch-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "standard"
      resources:
        requests:
          storage: 1Gi

---
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch
  namespace: log-elk
spec:
  selector:
    app: elasticsearch
  ports:
    - protocol: TCP
      port: 9200

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: logstash
  namespace: log-elk
spec:
  replicas: 1
  selector:
    matchLabels:
      app: logstash
  template:
    metadata:
      labels:
        app: logstash
    spec:
      containers:
      - name: logstash
        image: docker.elastic.co/logstash/logstash:7.15.0
        env:
          - name: ELASTICSEARCH_HOSTS
            value: "elasticsearch:9200"
          #- name: LOG_LEVEL
          #  value: "debug"
        volumeMounts:
        - name: config
          mountPath: /usr/share/logstash/pipeline/
          readOnly: true
      volumes:
      - name: config
        configMap:
          name: logstash-config

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: logstash-config
  namespace: log-elk
data:
  logstash.conf: |-
    input {
      beats {
        port => 5044
      }
    }

    filter {
      if [message] =~ /^{.*}$/ {
        json {
          source => "message"
          tag_on_failure => ["_jsonparsefailure"]
        }
      }
    }
      

    output {
      elasticsearch {
        hosts => "${ELASTICSEARCH_HOSTS}"
        index => "logstash-%{+YYYY.MM.dd}"
      }
    }

---
apiVersion: v1
kind: Service
metadata:
  name: logstash
  namespace: log-elk
spec:
  selector:
    app: logstash
  ports:
    - protocol: TCP
      port: 5044

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kibana
  namespace: log-elk
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kibana
  template:
    metadata:
      labels:
        app: kibana
    spec:
      containers:
      - name: kibana
        image: docker.elastic.co/kibana/kibana:7.15.0
        env:
          - name: ELASTICSEARCH_HOSTS
            value: "http://elasticsearch:9200"

---
apiVersion: v1
kind: Service
metadata:
  name: kibana
  namespace: log-elk
spec:
  selector:
    app: kibana
  ports:
    - protocol: TCP
      port: 5601

---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: filebeat
  namespace: log-elk
spec:
  selector:
    matchLabels:
      app: filebeat
  template:
    metadata:
      labels:
        app: filebeat
    spec:
      serviceAccountName: filebeat
      terminationGracePeriodSeconds: 30
      containers:
      - name: filebeat
        image: docker.elastic.co/beats/filebeat:7.15.0
        args: [
          "-c", "/etc/filebeat/filebeat.yml",
          "-e",
          "-d", "*",
        ]
        securityContext:
          runAsUser: 0
        env:
        - name: LOGSTASH_HOSTS
          value: "logstash:5044"
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        volumeMounts:
        - name: config
          mountPath: /etc/filebeat
          readOnly: true
        - name: varlibcontainers
          mountPath: /var/log/containers
          readOnly: false
        - name: varlogpods
          mountPath: /var/log/pods
          readOnly: true
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
      volumes:
      - name: config
        configMap:
          name: filebeat-config
      - name: varlibcontainers
        hostPath:
          path: /var/log/containers
      - name: varlogpods
        hostPath:
          path: /var/log/pods
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: filebeat-config
  namespace: log-elk
data:
  filebeat.yml: |-
    filebeat.inputs:
    - type: container
      paths:
      - /var/log/containers/*.log
    processors:
      - add_kubernetes_metadata:
          host: ${NODE_NAME}
          matchers:
          - logs_path:
              logs_path: "/var/log/containers/"
      - drop_event.when.not.or:
        - contains.kubernetes.namespace: "log-enabled"
    output.logstash:
      hosts: ['${LOGSTASH_HOSTS}']