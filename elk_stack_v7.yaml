---
apiVersion: v1
kind: Namespace
metadata:
  name: yrca-logging
  labels:
    istio-injection: disabled
    usergroup: yrca
    yrca-istio-injection: disabled
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: elk-serviceaccount
  namespace: yrca-logging
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: elk-clusterrole
rules:
  - apiGroups: [""]
    resources: ["namespaces", "pods"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["extensions", "apps"]
    resources: ["replicasets"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["batch"]
    resources: ["jobs"]
    verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: elk-clusterrolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: elk-clusterrole
subjects:
  - kind: ServiceAccount
    name: elk-serviceaccount
    namespace: yrca-logging
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: elasticsearch
  namespace: yrca-logging
spec:
  replicas: 1
  selector:
    matchLabels:
      app: elasticsearch
  template:
    metadata:
      labels:
        app: elasticsearch
    spec:
      containers:
        - name: elasticsearch
          image: docker.elastic.co/elasticsearch/elasticsearch:7.14.0
          resources:
            limits:
              memory: 2Gi
          ports:
            - containerPort: 9200
              name: rest
            - containerPort: 9300
              name: inter-node
          env:
            - name: discovery.type
              value: single-node
          volumeMounts:
            - name: elasticsearch-data
              mountPath: /usr/share/elasticsearch/data
      volumes:
        - name: elasticsearch-data
          persistentVolumeClaim:
            claimName: elasticsearch-data-claim
---
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch
  namespace: yrca-logging
spec:
  selector:
    app: elasticsearch
  ports:
    - port: 9200
      targetPort: 9200
      name: rest
    - port: 9300
      targetPort: 9300
      name: inter-node
  type: LoadBalancer
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: filebeat
  # should be the namespace where filebeat is running
  namespace: yrca-logging
rules:
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs: ["get", "create", "update"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: filebeat
rules:
- apiGroups: [""]
  resources:
  - namespaces
  - pods
  - nodes
  verbs:
  - get
  - watch
  - list
- apiGroups: ["apps"]
  resources:
    - replicasets
  verbs: ["get", "list", "watch"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: filebeat
  namespace: yrca-logging
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: filebeat
subjects:
- kind: ServiceAccount
  name: filebeat
  namespace: yrca-logging
roleRef:
  kind: ClusterRole
  name: filebeat
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: filebeat
  namespace: yrca-logging
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: filebeat
subjects:
  - kind: ServiceAccount
    name: filebeat
    namespace: yrca-logging
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: filebeat
  namespace: yrca-logging
spec:
  selector:
    matchLabels:
      app: filebeat
  template:
    metadata:
      labels:
        app: filebeat
    spec:
      serviceAccount: filebeat
      serviceAccountName: filebeat
      tolerations:
        - key: node-role.kubernetes.io/master
          effect: NoSchedule
      containers:
        - name: filebeat
          image: docker.elastic.co/beats/filebeat:7.14.0
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                 fieldPath: spec.nodeName
            - name: ELASTICSEARCH_HOSTS
              value: "logstash"
            - name: ELASTICSEARCH_PORT
              value: "5044"
            - name: ELASTICSEARCH_USERNAME
              value: "elastic"
            - name: ELASTICSEARCH_PASSWORD
              value: "changeme"
            - name: ELASTICSEARCH_INDEX
              value: "filebeat-%{[agent.version]}-%{+yyyy.MM.dd}"
            - name: ELASTICSEARCH_OUTPUT
              value: "elasticsearch"
            - name: FILEBEAT_MODULES
              value: "system"
            - name: FILEBEAT_MODULES_SYSTEM_PROCESS
              value: "enabled"
            - name: FILEBEAT_MODULES_SYSTEM_KUBELET
              value: "enabled"
          volumeMounts:
            - name: varlog
              mountPath: /var/log
            - name: varlibdockercontainers
              mountPath: /var/lib/docker/containers
              readOnly: true
            - name: filebeat-config
              mountPath: /usr/share/filebeat/filebeat.yml
              subPath: filebeat.yml
        # Add any additional plugins or configurations as needed
      volumes:
        - name: varlog
          hostPath:
            path: /var/log
        - name: varlibdockercontainers
          hostPath:
            path: /var/lib/docker/containers
        - name: filebeat-config
          configMap:
            name: filebeat-configmap
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kibana
  namespace: yrca-logging
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kibana
  template:
    metadata:
      labels:
        app: kibana
    spec:
      containers:
        - name: kibana
          image: docker.elastic.co/kibana/kibana:7.14.0
          resources:
            limits:
              memory: 1Gi
          env:
            - name: ELASTICSEARCH_HOSTS
              value: "http://elasticsearch:9200"
          ports:
            - containerPort: 5601
              name: http
---
apiVersion: v1
kind: Service
metadata:
  name: kibana
  namespace: yrca-logging
spec:
  selector:
    app: kibana
  ports:
    - port: 5601
      targetPort: 5601
      name: http
  type: LoadBalancer
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: elasticsearch-data-claim
  namespace: yrca-logging
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: standard
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kibana-configmap
  namespace: yrca-logging
data:
  kibana.yml: |-
    server.name: kibana
    server.host: 0.0.0.0
    elasticsearch.hosts: https://elasticsearch:9200
    xpack.security.enrollment.enabled: false
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: logstash
  namespace: yrca-logging
spec:
  replicas: 1
  selector:
    matchLabels:
      app: logstash
  template:
    metadata:
      labels:
        app: logstash
    spec:
      containers:
        - name: logstash
          image: docker.elastic.co/logstash/logstash:7.14.0
          resources:
            limits:
              memory: 1Gi
          ports:
            - containerPort: 5044
              name: beats
            - containerPort: 9600
              name: http
          volumeMounts:
            - name: logstash-config
              mountPath: /usr/share/logstash/pipeline/logstash.conf
              subPath: logstash.conf
      volumes:
        - name: logstash-config
          configMap:
            name: logstash-configmap

---
apiVersion: v1
kind: Service
metadata:
  name: logstash
  namespace: yrca-logging
spec:
  selector:
    app: logstash
  ports:
    - port: 5044
      targetPort: 5044
      name: beats
    - port: 9600
      targetPort: 9600
      name: http
  type: LoadBalancer

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: logstash-configmap
  namespace: yrca-logging
data:
  logstash.conf: |-
    input {
      beats {
        port => 5044
      }
    }
    output {
      elasticsearch {
          hosts => "elasticsearch:9200"
          template_overwrite => false
          manage_template => false
          # The events will be stored in elasticsearch under previously defined index_prefix value.  
          index => "%{[@metadata][index_prefix]}"
          sniffing => false
        }
    }

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: filebeat-configmap
  namespace: yrca-logging
data:
  filebeat.yml: |-
    filebeat.inputs:
    - type: container
      paths:
        - /var/log/containers/*.log
      exclude_files: ['tiller-deploy-*']
      processors:
        - add_kubernetes_metadata:
            host: ${NODE_NAME}
            matchers:
            - logs_path:
                logs_path: "/var/log/containers/"
    output.logstash:
      hosts: ["logstash:5044"]
      ssl.enabled: false
      ssl.verification_mode: none
      index: "logstash-%{+YYYY.MM.dd}"
      enabled: true
---
apiVersion: v1
kind: Service
metadata:
  name: filebeat
  namespace: yrca-logging
spec:
  selector:
    app: filebeat
  ports:
    - port: 5044
      targetPort: 5044
      name: beats
  type: ClusterIP
